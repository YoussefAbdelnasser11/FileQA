import streamlit as st
import tempfile
import os
from rag_core import RAGSystem

# ุฅุนุฏุงุฏ ุตูุญุฉ Streamlit
st.set_page_config(
    page_title="ูุธุงู RAG ููุฃุณุฆูุฉ ุญูู ุงููุณุชูุฏุงุช",
    page_icon="๐",
    layout="wide"
)

# ุนููุงู ุงูุชุทุจูู
st.title("๐ ูุธุงู RAG ููุฃุณุฆูุฉ ุญูู ุงููุณุชูุฏุงุช")
st.markdown("""
ูุฐุง ุงูุชุทุจูู ูุณุชุฎุฏู ุชูููุฉ RAG (Retrieval-Augmented Generation) ููุฅุฌุงุจุฉ ุนูู ุงูุฃุณุฆูุฉ ุจูุงุกู ุนูู ูุญุชูู ูุณุชูุฏ PDF.
ูู ุจุชุญููู ูุณุชูุฏ PDF ุซู ุงุทุฑุญ ุฃุณุฆูุชู ูุชุญุตู ุนูู ุฅุฌุงุจุงุช ุฏูููุฉ.
""")

# ุชููุฆุฉ ุญุงูุฉ ุงูุฌูุณุฉ
if "rag_system" not in st.session_state:
    st.session_state.rag_system = RAGSystem()
if "processed" not in st.session_state:
    st.session_state.processed = False

# ุดุฑูุท ุฌุงูุจู ููุชุญููู ูุงูุฅุนุฏุงุฏุงุช
with st.sidebar:
    st.header("ุงูุฅุนุฏุงุฏุงุช")
    uploaded_file = st.file_uploader("ุชุญููู ููู PDF", type="pdf")
    
    # ุฅุนุฏุงุฏุงุช ุงููููุฐุฌ
    st.subheader("ุฅุนุฏุงุฏุงุช ุงููููุฐุฌ")
    model_option = st.selectbox(
        "ุงุฎุชุฑ ุงููููุฐุฌ ุงููุบูู",
        ["mistralai/Mistral-7B-v0.1", "microsoft/DialoGPT-medium"]
    )
    
    # ูุนุงูุฌุฉ ุงูุฌูุงุฒ
    device_name = "GPU" if torch.cuda.is_available() else "CPU"
    st.info(f"ุงูุฌูุงุฒ ุงููุณุชุฎุฏู: {device_name}")

# ูุนุงูุฌุฉ ุงูููู ุงููุฑููุน
if uploaded_file is not None and not st.session_state.processed:
    # ุญูุธ ุงูููู ูุคูุชูุง
    with tempfile.NamedTemporaryFile(delete=False, suffix=".pdf") as tmp_file:
        tmp_file.write(uploaded_file.read())
        tmp_path = tmp_file.name
    
    try:
        # ูุนุงูุฌุฉ ุงููุณุชูุฏ
        num_chunks = st.session_state.rag_system.process_document(tmp_path)
        st.session_state.processed = True
        st.success(f"ุชู ูุนุงูุฌุฉ ุงููุณุชูุฏ ุจูุฌุงุญ! ุชู ุฅูุดุงุก {num_chunks} ุฌุฒุกูุง.")
    except Exception as e:
        st.error(f"ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุนุงูุฌุฉ ุงููุณุชูุฏ: {str(e)}")
    finally:
        # ุญุฐู ุงูููู ุงููุคูุช
        os.unlink(tmp_path)

# ูุงุฌูุฉ ุงูุฃุณุฆูุฉ ุฅุฐุง ุชู ูุนุงูุฌุฉ ุงููุณุชูุฏ
if st.session_state.processed:
    st.subheader("ุงุทุฑุญ ุณุคุงูุงู ุญูู ุงููุณุชูุฏ")
    
    question = st.text_input("ุงูุชุจ ุณุคุงูู ููุง:", placeholder="ูุชู ููุฏ ุฃูุฏุฑู ุณุงูุฑุ")
    
    if st.button("ุงูุญุตูู ุนูู ุงูุฅุฌุงุจุฉ") and question:
        with st.spinner("ุฌุงุฑู ุงูุจุญุซ ุนู ุงูุฅุฌุงุจุฉ..."):
            try:
                answer, context = st.session_state.rag_system.generate_answer(question)
                
                st.subheader("ุงูุฅุฌุงุจุฉ:")
                st.success(answer)
                
                with st.expander("ุนุฑุถ ุงููุต ุงููุณุชุฎุฏู ููุฅุฌุงุจุฉ"):
                    st.text(context)
            except Exception as e:
                st.error(f"ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุชูููุฏ ุงูุฅุฌุงุจุฉ: {str(e)}")
else:
    st.info("โณ ูุฑุฌู ุชุญููู ููู PDF ูุจุฏุก ุงุณุชุฎุฏุงู ุงูุชุทุจูู.")

# ุชุฐููู ุงูุตูุญุฉ
st.markdown("---")
st.markdown("""
ุชู ุชุทููุฑ ูุฐุง ุงูุชุทุจูู ุจุงุณุชุฎุฏุงู:
- **Streamlit** ููุงุฌูุฉ ุงููุณุชุฎุฏู
- **Transformers** ููููุงุฐุฌ ุงููุบููุฉ
- **FAISS** ููุจุญุซ ุงููุชุฌูู
- **PyPDF2** ููุนุงูุฌุฉ ูุณุชูุฏุงุช PDF
""")
